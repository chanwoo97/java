package ch04;

public class MainClassCh4 {
    // 실행 하는 클래스
    public static void main(String[] args) {
        // 설계한 클래스를 이용해서
        // 객체 생성 ,
        // 순서1
        // [클래스명] 객체명(인스턴스 변수명) = new [클래스명]();
        // new Car() : 기본 생성자,
        Car car1 = new Car(); // 기본 생성자 호출
        // 순서2
        // 해당 자동차의 멤버 변수에 값 대입, 직접 값을 할당, 실무에서는 이렇게 사용안하고,
        // getter/setter 메소드를 사용 -> 불변성을 이용해서, 캡슐화, 밖에서 안보이게 , 접근 지정자로
        // 꽁꽁 숨길 예정. 지금은 기본이니, 참고만 함.
        car1.model = "suv";
        car1.price = "4000만원";
        car1.company = "기아자동차";
        // 순서3, 기능 확인. 객체명.메소드명(); 이런 형식으로 사용함,
        // 이전에 정적인 메소드는 , 사용 모양 : 클래스명.메소드명() , 비교.
        car1.showInfo();
    }
}

/*
MainClassCh4 클래스 쉽게 이해하기
1. 실행 클래스란?
MainClassCh4는 프로그램을 시작하는 곳이에요.

main 메서드 안에 적힌 코드가 컴퓨터가 처음 실행하는 코드입니다.

2. 객체 생성 과정
Car car1 = new Car(); 
클래스(Car) 는 자동차 설계도예요.

new Car()는 자동차를 하나 만드는 명령입니다.

car1은 방금 만든 자동차 객체를 가리키는 이름(변수)입니다.

3. 멤버 변수에 값 넣기
car1.model = "suv";
car1.price = "4000만원";
car1.company = "기아자동차";
car1 자동차의 각각의 속성(model, price, company)에 값을 직접 넣어줍니다.

실제 업무에선 직접 넣기보다 getter/setter라는 메서드를 사용해 데이터 안전성을 확보합니다(나중에 배워요).

4. 메서드 호출하기
car1.showInfo();
showInfo()는 자동차 정보를 화면에 보여주는 기능이에요.

car1.showInfo()는 car1 자동차의 정보를 출력하라는 뜻입니다.

5. 요약
| 코드 부분                     | 설명                 |
| ------------------------- | ------------------ |
| `Car car1 = new Car();`   | 자동차 객체를 하나 만든다     |
| `car1.model = "suv";`     | 모델명을 "suv"로 정한다    |
| `car1.price = "4000만원";`  | 가격을 "4000만원"으로 정한다 |
| `car1.company = "기아자동차";` | 제조사를 "기아자동차"로 정한다  |
| `car1.showInfo();`        | 자동차 정보를 화면에 출력한다   |

흐름 그림으로 표현
프로그램 시작
   ↓
[Car 클래스] (자동차 설계도)
   ↓
객체 생성: car1 = new Car() 
   ↓
car1의 속성값 세팅
   ├─ model = "suv"
   ├─ price = "4000만원"
   └─ company = "기아자동차"
   ↓
car1.showInfo() 메서드 호출
   ↓
화면 출력:
  모델명 : suv
  가격 : 4000만원
  제조사 : 기아자동차

*/