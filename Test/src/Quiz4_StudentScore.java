public class Quiz4_StudentScore {
   public static void main(String[] args) {
   // 학생별 국어, 영어, 수학 점수를 저장하는 2차원 배열 선언 및 초기화
   int[][] scores = {
      { 80, 60, 70 }, // 1번 학생: 국어 80, 영어 60, 수학 70
      { 90, 95, 80 }, // 2번 학생: 국어 90, 영어 95, 수학 80
      { 75, 80, 100 }, // 3번 학생: 국어 75, 영어 80, 수학 100
      { 80, 70, 95 }, // 4번 학생: 국어 80, 영어 70, 수학 95
      { 100, 65, 80 } // 5번 학생: 국어 100, 영어 65, 수학 80
   };

   // 출력 헤더: 각 열 제목 출력
   System.out.println("학생번호   국어   영어   수학    총점    평균");
   System.out.println("=============================================");

   // 학생 수만큼 반복 (scores 배열 행 개수)
   for (int i = 0; i < scores.length; i++) {
      int sum = 0; // 각 학생의 총점(합계)을 저장할 변수 초기화

      // 각 학생의 과목 점수(열)만큼 반복해서 점수 합산
      for (int j = 0; j < scores[i].length; j++) {
         sum += scores[i][j]; // 해당 과목 점수를 sum에 더함
      }

      // 평균 점수를 실수(double)로 계산, 정수 나누기 문제 방지 위해 형변환 사용
      double avg = sum / (double) scores[i].length;

      // 학생 번호, 각 과목 점수, 총점, 평균을 포맷에 맞게 출력
      System.out.printf("%d번 학생:  %4d  %6d  %6d  %6d  %6.1f\n",
      i + 1, // 학생 번호 (배열 인덱스 0부터 시작하므로 +1)
      scores[i][0], // 국어 점수
      scores[i][1], // 영어 점수
      scores[i][2], // 수학 점수
      sum, // 총점
      avg); // 평균 (소수점 1자리까지 표시)
      }
   }
}



/*
이해를 돕는 그림과 흐름
1. 데이터 저장 (2차원 배열 scores)
| 학생번호 | 국어  | 영어 | 수학  |
| ---- | --- | -- | --- |
| 1    | 80  | 60 | 70  |
| 2    | 90  | 95 | 80  |
| 3    | 75  | 80 | 100 |
| 4    | 80  | 70 | 95  |
| 5    | 100 | 65 | 80  |
배열 scores는 행(row)이 학생 한 명을 나타내고,
열(column)은 국어, 영어, 수학 점수를 각각 나타냅니다.

2. 총점과 평균 계산 흐름도
[시작]
   |
   v
학생 1 점수 읽기 (80, 60, 70)
   |
   v
총점 = 80+60+70 = 210
   |
   v
평균 = 210 / 3 = 70.0
   |
   v
결과 출력
   |
   v
다음 학생 반복 (학생 2, 학생 3 ... 학생 5)
   |
   v
[종료]

3. 출력 예시
학생번호   국어   영어   수학    총점    평균
=============================================
1번 학생:    80     60     70    210    70.0
2번 학생:    90     95     80    265    88.3
3번 학생:    75     80    100    255    85.0
4번 학생:    80     70     95    245    81.7
5번 학생:   100     65     80    245    81.7

4. 전체 흐름 요약
scores 배열에서 학생 한 명씩 점수를 읽는다.

각 학생 점수를 모두 더해서 총점을 계산한다.

총점을 과목 개수로 나누어 평균을 구한다.

학생 번호, 점수, 총점, 평균을 화면에 출력한다.

모든 학생에 대해 반복 후 프로그램 종료.

--------------------------------------------------------------------------
🎓 Quiz4_StudentScore 시각적 개념 설명
📊 1. 전체 프로그램 흐름도
┌────────────────────────────┐
│   학생 점수 2차원 배열 선언 │
└────────────┬───────────────┘
             ▼
┌────────────────────────────┐
│   "헤더" 출력               │
│   학생번호 | 국어 | 영어... │
└────────────┬───────────────┘
             ▼
┌────────────────────────────┐
│   학생별로 점수 계산 시작    │  ← 반복문 for(i)
└────────────┬───────────────┘
             ▼
     ┌────────────────────┐
     │ 각 학생의 점수 합산 │  ← 내부 반복문 for(j)
     └─────────┬──────────┘
               ▼
     ┌────────────────────┐
     │ 평균 계산           │  ← 실수형으로 계산
     └─────────┬──────────┘
               ▼
     ┌────────────────────┐
     │ 표 형식으로 출력     │
     └────────────────────┘
             ▲
             └── 반복 끝날 때까지 계속

🧠 2. 점수 배열 구조 이해하기 (2차원 배열)
int[][] scores = {
  {80, 60, 70},   // 1번 학생
  {90, 95, 80},   // 2번 학생
  {75, 80, 100},  // 3번 학생
  {80, 70, 95},   // 4번 학생
  {100, 65, 80}   // 5번 학생
};
🧮 scores[i][j]의 의미:
i: 학생 번호 (0~4)
j: 과목 번호
0: 국어
1: 영어
2: 수학

💡 3. 출력 예시
학생번호   국어   영어   수학    총점    평균
=============================================
1번 학생:   80     60     70     210   70.0
2번 학생:   90     95     80     265   88.3
3번 학생:   75     80    100     255   85.0
4번 학생:   80     70     95     245   81.7
5번 학생:  100     65     80     245   81.7

🧒 쉬운 개념 요약
| 용어                      | 설명                               |
| ----------------------- | -------------------------------- |
| 2차원 배열                  | 표처럼 생긴 데이터 구조 (학생 x 과목)          |
| `for` 반복문               | 여러 번 반복해서 계산하거나 출력할 때 사용         |
| `sum += scores[i][j]`   | 점수를 더하는 누적 연산                    |
| `avg = sum / (double)3` | 평균 계산 (정확한 소수점 표현을 위해 double 사용) |
| `System.out.printf()`   | 표처럼 예쁘게 출력하기 위한 포맷 함수            |

*/